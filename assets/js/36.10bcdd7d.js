(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{522:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" Webpack")]),t._v(" "),e("p",[t._v("静态模块打包器。前端的所有资源文件（js,img,css,json…)都会作为模块处理。他将根据模块的依赖关系进行静态分析，打包生成对应的静态资源(bundle)")]),t._v(" "),e("h3",{attrs:{id:"五个概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五个概念"}},[t._v("#")]),t._v(" 五个概念")]),t._v(" "),e("ol",[e("li",[t._v("entry 入口\n"),e("code",[t._v("entry: './path/to/my/entry/file.js'")])]),t._v(" "),e("li",[t._v("output 打包后资源的输出位置及命名")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'my-first-webpack.bundle.js'\n  }\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("loader  loader 让 webpack 能够去处理那些非 JavaScript 文件（webpack 自身只理解 JavaScript）")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("module.exports = {\n  module: {\n    rules: [\n      { test: /\\.css$/, use: 'css-loader' },\n      { test: /\\.ts$/, use: 'ts-loader' }\n    ]\n  }\n};\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("插件(plugins)\nloader 被用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量。插件接口功能极其强大，可以用来处理各种各样的任务。\n想要使用一个插件，你只需要 require() 它，然后把它添加到 plugins 数组中。"),e("br"),t._v("\n插件是 webpack 的支柱功能。webpack 自身也是构建于，你在 webpack 配置中用到的相同的插件系统之上！"),e("br"),t._v("\n插件目的在于解决 loader 无法实现的其他事。"),e("br")])]),t._v(" "),e("h4",{attrs:{id:"剖析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#剖析"}},[t._v("#")]),t._v(" 剖析")]),t._v(" "),e("p",[t._v("webpack 插件是一个具有 apply 属性的 JavaScript 对象。apply 属性会被 webpack compiler 调用，并且 compiler 对象可在整个编译生命周期访问。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  plugins: [\n    new webpack.optimize.UglifyJsPlugin(),\n    new HtmlWebpackPlugin({template: './src/index.html'})\n  ]\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("mode 'development/production'")])])])}),[],!1,null,null,null);a.default=r.exports}}]);