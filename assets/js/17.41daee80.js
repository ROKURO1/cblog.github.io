(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{504:function(t,_,v){"use strict";v.r(_);var e=v(4),a=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"http-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),v("p",[t._v("http是一个简单的请求-响应协议，基于TCP/IP协议之上的应用层协议\n###特点")]),t._v(" "),v("h2",{attrs:{id:"状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("状态码")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("100")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Continue 继续，客户端应继续其请求")])]),t._v(" "),v("tr",[v("td",[t._v("101")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Switching Protocols 切换到更高级的协议，比如WebSocket")])]),t._v(" "),v("tr",[v("td",[t._v("200")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("OK")])]),t._v(" "),v("tr",[v("td",[t._v("201")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Created\t已创建。成功请求并创建了新的资源")])]),t._v(" "),v("tr",[v("td",[t._v("202")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Accepted 已接受。已经接受请求，但未处理完成")])]),t._v(" "),v("tr",[v("td",[t._v("301")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("永久重定向 被请求的资源已永久移动到新位置")])]),t._v(" "),v("tr",[v("td",[t._v("302")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("暂时重定向")])]),t._v(" "),v("tr",[v("td",[t._v("303")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("与301类似。使用GET和POST请求查看")])]),t._v(" "),v("tr",[v("td",[t._v("304")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("资源未修改 触发协商缓存")])]),t._v(" "),v("tr",[v("td",[t._v("305")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Use Proxy 使用代理。所请求的资源必须通过代理访问")])]),t._v(" "),v("tr",[v("td",[t._v("307")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("临时重定向。与302类似。使用GET请求重定向")])]),t._v(" "),v("tr",[v("td",[t._v("400")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Bad Request\t请求语法错误，服务器无法理解")])]),t._v(" "),v("tr",[v("td",[t._v("401")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Unauthorized\t请求要求用户的身份认证")])]),t._v(" "),v("tr",[v("td",[t._v("403")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Forbidden\t服务器理解请求客户端的请求，但是拒绝执行此请求")])]),t._v(" "),v("tr",[v("td",[t._v("404")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Not Found")])]),t._v(" "),v("tr",[v("td",[t._v("500")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("服务器内部错误")])]),t._v(" "),v("tr",[v("td",[t._v("501")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Not Implemented\t服务器不支持请求的功能，无法完成请求")])]),t._v(" "),v("tr",[v("td",[t._v("502")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应")])]),t._v(" "),v("tr",[v("td",[t._v("503")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("由于超载或系统维护，服务器暂时的无法处理客户端的请求")])]),t._v(" "),v("tr",[v("td",[t._v("504")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Gateway Time-out 充当网关或代理的服务器，未及时从远端服务器获取请求")])]),t._v(" "),v("tr",[v("td",[t._v("505")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP Version not supported\t服务器不支持请求的HTTP协议的版本，无法完成处理")])])])]),t._v(" "),v("h2",{attrs:{id:"http请求方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http请求方式"}},[t._v("#")]),t._v(" HTTP请求方式")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("请求方式")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("GET")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),v("tr",[v("td",[t._v("POST")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("向指定资源提交数据")])]),t._v(" "),v("tr",[v("td",[t._v("HEAD")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("获取报头")])]),t._v(" "),v("tr",[v("td",[t._v("PUT")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("浏览器向服务器发送的数据取代指定的文档内容")])]),t._v(" "),v("tr",[v("td",[t._v("DELETE")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("请求服务器删除指定页面")])]),t._v(" "),v("tr",[v("td",[t._v("CONNECT")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP1.1协议中预留给能够将连接改为管道方式的代理服务器")])]),t._v(" "),v("tr",[v("td",[t._v("OPTIONS")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("允许浏览器查看服务器性能")])]),t._v(" "),v("tr",[v("td",[t._v("TRACE")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("显示服务器收到的请求，用于测试&诊断")])])])]),t._v(" "),v("h2",{attrs:{id:"http2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[t._v("#")]),t._v(" HTTP2")]),t._v(" "),v("ol",[v("li",[t._v("二进制协议（而非文本格式）引入二进制数据帧和流的概念，其中帧对数据进行顺序标识，")]),t._v(" "),v("li",[t._v("多路复用（并行，不需要像1.x得到响应后才能发下一个请求")]),t._v(" "),v("li",[t._v("对数据包做标记（保证顺序 不会出现数据错乱）")]),t._v(" "),v("li",[t._v("头信息压缩（客户端和服务器同时维护一张头信息表，同样字段只发送索引号）")]),t._v(" "),v("li",[t._v("服务器推送（只通过一次HTML请求，就同时把样式、图片等全部发送给浏览器，通过一次通信获得所有资源。）")])]),t._v(" "),v("h2",{attrs:{id:"http1-0-http1-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http1-0-http1-1"}},[t._v("#")]),t._v(" HTTP1.0&HTTP1.1")]),t._v(" "),v("ol",[v("li",[t._v("HTTP1.1引入持续连接的概念,在一个TCP连接上可以传送多个HTTP请求与响应，减少了建立关闭连接的消耗和延迟"),v("br"),t._v("\n默认开启Connection:keep-alive")]),t._v(" "),v("li",[t._v("多了缓存处理Etag,")])]),t._v(" "),v("h2",{attrs:{id:"https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),v("p",[v("strong",[t._v("对一个密钥进行非对称加密，然后使用这个密钥进行对称加密")])]),t._v(" "),v("h3",{attrs:{id:"https与http区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https与http区别"}},[t._v("#")]),t._v(" HTTPS与HTTP区别")]),t._v(" "),v("ol",[v("li",[t._v("端口号：8080 443")]),t._v(" "),v("li",[t._v("安全性：HTTP明文传输 HTTPS在HTTP和TCP间添加安全协议SSL/TSL加密")]),t._v(" "),v("li")]),t._v(" "),v("p",[t._v("###【请求过程4次握手】")]),t._v(" "),v("ol",[v("li",[t._v("浏览器发HTTPS请求")]),t._v(" "),v("li",[t._v("服务器有一对密钥 公钥&私钥，私钥保存，将包含公钥的证书发给浏览器")]),t._v(" "),v("li",[t._v("浏览器解析证书，检测公钥是否合法后，生成密钥（就是一个随机数），用公钥对这个密钥加密")]),t._v(" "),v("li",[t._v("服务器用私钥对其解密，就获得了密钥。然后使用密钥对数据进行对称加密，发送给浏览器。")]),t._v(" "),v("li",[t._v("浏览器用密钥解密，得到数据。")])]),t._v(" "),v("h2",{attrs:{id:"tcp-udp区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp区别"}},[t._v("#")]),t._v(" TCP&UDP区别")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("TCP")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("UDP")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("可靠")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("不可靠")])]),t._v(" "),v("tr",[v("td",[t._v("面向连接")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("无连接")])]),t._v(" "),v("tr",[v("td",[t._v("TCP面向字节流")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("UDP面向报文")])]),t._v(" "),v("tr",[v("td",[t._v("拥塞控制")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("实时通信")])]),t._v(" "),v("tr",[v("td",[t._v("点到点")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("一对一、一对多、多对一、多对多")])]),t._v(" "),v("tr",[v("td",[t._v("量级 20字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("8字节")])])])]),t._v(" "),v("h2",{attrs:{id:"websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),v("h3",{attrs:{id:"特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),v("ol",[v("li",[t._v("持久连接（解决HTTP无连接性）")]),t._v(" "),v("li",[t._v("双向通信，实时性更强")]),t._v(" "),v("li",[t._v("基于TCP传输协议，并复用HTTP的握手通道")]),t._v(" "),v("li",[t._v("二进制，也可以发送文本")]),t._v(" "),v("li",[t._v("没有同源限制")])]),t._v(" "),v("h3",{attrs:{id:"过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),v("ol",[v("li",[t._v("客户端发起Websocket握手 （本质上还是HTTP请求，请求头中多了Upgrade：websocket等）")]),t._v(" "),v("li",[t._v("服务器返回101 协议升级")])]),t._v(" "),v("h2",{attrs:{id:"get-post区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get-post区别"}},[t._v("#")]),t._v(" GET&POST区别")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("GET")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("POST")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("GET的参数在url中(可见)")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("POST参数在请求体中（不可见）")])]),t._v(" "),v("tr",[v("td",[t._v("安全")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("不安全")])]),t._v(" "),v("tr",[v("td",[t._v("传送数据量小")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("传送数据量大")])]),t._v(" "),v("tr",[v("td",[t._v("GET得到的数据可被缓存/书签/历史记录")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("不可")])]),t._v(" "),v("tr",[v("td",[t._v("GET一次一个TCP数据包")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("POST在一些情况下会发送两个，先发送header(100continue)再发送请求体中data")])])])]),t._v(" "),v("h2",{attrs:{id:"dns域名解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dns域名解析"}},[t._v("#")]),t._v(" DNS域名解析")]),t._v(" "),v("p",[v("strong",[t._v("DNS是一个网络服务器，域名解析是一条记录，通过IP地址找到域名")])]),t._v(" "),v("h3",{attrs:{id:"如何查询-udp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何查询-udp"}},[t._v("#")]),t._v(" 如何查询（UDP)")]),t._v(" "),v("ol",[v("li",[t._v("浏览器缓存：按一定频率更新")]),t._v(" "),v("li",[t._v("操作系统缓存：")]),t._v(" "),v("li",[t._v("路由器缓存：")]),t._v(" "),v("li",[t._v("ISP本地域名服务器(递归)")]),t._v(" "),v("li",[t._v("根域服务器/顶级域/二级域（迭代）")])]),t._v(" "),v("h2",{attrs:{id:"cookie-session"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cookie-session"}},[t._v("#")]),t._v(" Cookie&Session")]),t._v(" "),v("h3",{attrs:{id:"cookie"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),v("p",[t._v("服务器通过设置set-Cookie响应头，将Cookie发送给浏览器。浏览器保存在本地，在下次发送请求时带上")]),t._v(" "),v("h3",{attrs:{id:"session"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" session")]),t._v(" "),v("ul",[v("li",[t._v("存放在服务器，用来存放用户数据")]),t._v(" "),v("li",[t._v("浏览器第一次发请求时服务器自动生成hashtable&sessionid来唯一表示这个hash表，并将sessionid存放在cookie中响应给browser。\n第二次请求 将携带着sessionid的cookie发给服务器，通过sessionid找到用户对应的表")]),t._v(" "),v("li",[t._v("session依赖于cookie")])]),t._v(" "),v("h3",{attrs:{id:"区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),v("ol",[v("li",[t._v("cookie保存在客户端")]),t._v(" "),v("li",[t._v("安全性")]),t._v(" "),v("li",[t._v("session消耗服务器资源 cookie影响网络性能")])]),t._v(" "),v("h2",{attrs:{id:"浏览器缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),v("h3",{attrs:{id:"强缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),v("p",[v("strong",[t._v("在客户端完成，不请求服务器")])]),t._v(" "),v("ol",[v("li",[t._v("Expires")]),t._v(" "),v("li",[t._v("cache-control\n"),v("ul",[v("li",[t._v("max-age")]),t._v(" "),v("li",[t._v("public/private 代理服务器是否缓存。")]),t._v(" "),v("li",[t._v("immutable 即使用户做了刷新操作，也不向服务器发起http请求")]),t._v(" "),v("li",[t._v("no-cache 跳过强缓存，直接协商缓存")]),t._v(" "),v("li",[t._v("no-store 取消强缓存&协商缓存")])])])]),t._v(" "),v("h3",{attrs:{id:"协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),v("p",[v("strong",[t._v("需要客户端和服务器两端进行交互")])]),t._v(" "),v("ol",[v("li",[t._v("Etag 一个hash，表示唯一")]),t._v(" "),v("li",[t._v("last-modify 文件的修改时间，精确到秒\n"),v("strong",[t._v("response header中的etag、last-modified在客户端重新向服务端发起请求时，会在request header中换个key名：")])])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("// response header\netag: '5c20abbd-e2e8'\nlast-modified: Mon, 24 Dec 2018 09:49:49 GMT\n\n// request header 变为\nif-none-matched: '5c20abbd-e2e8'\nif-modified-since: Mon, 24 Dec 2018 09:49:49 GMT\n")])])]),v("h2",{attrs:{id:"三握四挥"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三握四挥"}},[t._v("#")]),t._v(" 三握四挥")]),t._v(" "),v("h3",{attrs:{id:"三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),v("p",[t._v("第一次握手： 客户端给服务器发送一个 SYN 报文。\n第二次握手： 服务器收到 SYN 报文之后，会应答一个 SYN+ACK 报文。\n第三次握手： 客户端收到 SYN+ACK 报文之后，会回应一个 ACK 报文。")]),t._v(" "),v("h3",{attrs:{id:"四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[t._v("#")]),t._v(" 四次挥手")]),t._v(" "),v("p",[t._v("第一次挥手： 客户端发送FIN报文（进入FIN_WAIT_1状态）\n第二次：服务器返回ACK报文，此时还有未发送完的数据（CLOSE_WAIT状态）\n第三次：服务器发送FIN报文，请求关闭连接（LAST_ACK）\n第四次：客户端发送ACK（TIME_WAIT）")]),t._v(" "),v("h3",{attrs:{id:"问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),v("ul",[v("li",[t._v("为什么建立连接只用三次握手，而断开连接却要四次挥手？"),v("br"),t._v("\n服务端的FIN和ACK需要分开发，并不是像三次握手中那样，SYN可以和ACK同步发，所以就需要四次挥手"),v("br")]),t._v(" "),v("li",[t._v("在四次挥手中，客户端为什么在TIME_WAIT后必须等待2MSL时间呢？"),v("br"),t._v("\n为了保证客户端发送的最后一个ACK报文段能够到达服务端。"),v("br"),t._v("\n这个ACK报文段有可能丢失，所以若没收到第四次的ACK，会重复第三次的操作重传FIN报文")])]),t._v(" "),v("h2",{attrs:{id:"tcp滑动窗口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp滑动窗口"}},[t._v("#")]),t._v(" TCP滑动窗口")]),t._v(" "),v("ol",[v("li",[t._v("作用：流量控制&乱序重排")]),t._v(" "),v("li",[t._v("是什么：告诉发送端一次可以发送的数据大小\n接收端将自己可以接收的缓冲区大小放到TCP首部的窗口大小字段，通过ACK告诉发送端\n窗口大小越大说明网络的吞吐率越高")])]),t._v(" "),v("h2",{attrs:{id:"拥塞控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制"}},[t._v("#")]),t._v(" 拥塞控制")]),t._v(" "),v("p",[t._v("网络发生拥堵时，会产生数据包时延、丢失的情况，这时若是重传会使网络负担更加严重。所以TCP会自我牺牲，降低发送的数据量。")])])}),[],!1,null,null,null);_.default=a.exports}}]);