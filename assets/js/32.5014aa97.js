(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{519:function(a,t,e){"use strict";e.r(t);var r=e(4),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[a._v("#")]),a._v(" 正则表达式")]),a._v(" "),e("h2",{attrs:{id:"一-创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-创建"}},[a._v("#")]),a._v(" 一 创建")]),a._v(" "),e("p",[e("code",[a._v("let reg = new RegExp(/123/)")]),a._v(" "),e("code",[a._v("let reg = /123/")])]),a._v(" "),e("h2",{attrs:{id:"二-test-检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-test-检测"}},[a._v("#")]),a._v(" 二 test 检测")]),a._v(" "),e("p",[e("code",[a._v("reg.test(123)")]),a._v(" "),e("code",[a._v("reg.test('abc') false")])]),a._v(" "),e("h2",{attrs:{id:"三-边界符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-边界符"}},[a._v("#")]),a._v(" 三 边界符")]),a._v(" "),e("ol",[e("li",[a._v("^ 开始")]),a._v(" "),e("li",[a._v("$ 结尾")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let reg1  = /^abc/      //以abc为开头\nreg1.test('aabc')    //false\n\nlet reg2  = /abc&/      //以abc为结尾\nreg2.test('aabc')   //true\n\n")])])]),e("h2",{attrs:{id:"四-字符类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-字符类"}},[a._v("#")]),a._v(" 四 字符类")]),a._v(" "),e("p",[a._v("1.[ ]               只匹配其中一个就可以")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Let rg = /[abc]/          //只要包含a或b或c就行\nLet rg = /^[abc]$/        //必须是a 或b 或c\nLet rg = /^[a-z]$/        //26个字母其中的一个\nLet rg = /^[a-zA-Z0-9]$/   //大小写&数字\nLet rg = /^[a-zA-Z0-9_]$/  //加下划线\nLet rg = /^[^a-zA-Z0-9_]$/    //如果中括号里面有^ 表示取反 （即不能包含）\n")])])]),e("h2",{attrs:{id:"五-量词符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五-量词符"}},[a._v("#")]),a._v(" 五 量词符")]),a._v(" "),e("p",[a._v("设定每个模式出现的次数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("//使a出现次数 >= 0\nlet rg = /^a*$/\n//使a出现次数 >= 1\nlet rg = /^a+$/\n//使a出现次数 0||1\nlet rg = /^a?$/\n//使a出现次数 = n\nlet rg = /^a{n}$/\n//使a出现次数 >= n\nlet rg = /^a{n,}$/\n//使a出现次数 \nlet rg = /^a{n,m}$/\n")])])]),e("h2",{attrs:{id:"六-预定义类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六-预定义类"}},[a._v("#")]),a._v(" 六 预定义类")]),a._v(" "),e("ul",[e("li",[a._v("\\d    [0-9]")]),a._v(" "),e("li",[a._v("\\D    [0-9]以外")]),a._v(" "),e("li",[a._v("\\w    [A-Za-z0-9]")]),a._v(" "),e("li",[a._v("\\W")]),a._v(" "),e("li",[a._v("\\s    匹配空格")]),a._v(" "),e("li",[a._v("\\S")])]),a._v(" "),e("p",[a._v("【eg】国内电话 /^\\d{3}-\\d{8}$/")]),a._v(" "),e("h2",{attrs:{id:"七-替换-replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七-替换-replace"}},[a._v("#")]),a._v(" 七 替换 replace")]),a._v(" "),e("ol",[e("li",[a._v("参数")])]),a._v(" "),e("ul",[e("li",[a._v("g 全局匹配")]),a._v(" "),e("li",[a._v("i  忽略大小写")]),a._v(" "),e("li",[a._v("gi 全局匹配+忽略大小写")])]),a._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[a._v("返回一个新字符串")]),a._v(" "),e("li",[a._v("str.replace(/被替换的字符/g,替换的字符)")])])])}),[],!1,null,null,null);t.default=s.exports}}]);