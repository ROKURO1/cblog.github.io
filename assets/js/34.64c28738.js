(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{520:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"关于vue的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于vue的问题"}},[t._v("#")]),t._v(" 关于vue的问题")]),t._v(" "),e("h2",{attrs:{id:"_1-为什么vue中data是一个函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么vue中data是一个函数"}},[t._v("#")]),t._v(" 1.为什么vue中data是一个函数？")]),t._v(" "),e("p",[t._v("Object是引用数据类型,如果不用function 返回,每个组件的data 都是内存的同一个地址,一个数据改变了其他也改变了;\njavascipt只有函数构成作用域(注意理解作用域,只有函数的{}构成作用域,对象的{}以及 if(){}都不构成作用域)，data是一个函数时，每个组件实例都有自己的作用域，每个实例相互独立,不会相互影响")]),t._v(" "),e("h2",{attrs:{id:"_2-vue中是如何监听数组变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue中是如何监听数组变化"}},[t._v("#")]),t._v(" 2.vue中是如何监听数组变化？")]),t._v(" "),e("p",[t._v("vue重写了数组的push、splice、pop、unshift、splice、sort、reverse等方法。")])])}),[],!1,null,null,null);a.default=r.exports}}]);